AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Template jenkins_behind_nginx: This template installs Jenkins Master Server on a Amazon Linux 2016.09 instance.'
Parameters:
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.small
    Description: Jenkins server EC2 instance type
    Type: String
  VpcId:
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    Type: AWS::EC2::VPC::Id
  SubnetId:
    ConstraintDescription: must be an existing subnet in the selected Virtual Private Cloud.
    Description: SubnetId of an existing subnet (for the primary network) in your Virtual Private Cloud (VPC)
    Type: AWS::EC2::Subnet::Id
  PrivateIpAddress:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Description: Private IP Address of Jenkins Server
    Type: String
  VolumeSize:
    Type: Number
    Default: 8
  Monitoring:
    Description: Specifies whether detailed monitoring is enabled for the instance
    Type: String
    Default: false
    AllowedValues:
    - true
    - false
  JenkinsPrefix:
    Default: jenkins
    Description: Jenkins URL prefix
    MinLength: '1'
    Type: String
  MavenVersion:
    Default: 3.3.9
    Description: Maven version
    MinLength: '1'
    Type: String
  SSHLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: The IP address range that can be used to SSH to the EC2 instances
    MaxLength: '18'
    MinLength: '9'
    Type: String
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Instance Configuration
      Parameters:
      - KeyName
      - InstanceType
      - VpcId
      - SubnetId
      - PrivateIpAddress
      - VolumeSize
      - Monitoring
      - SSHLocation
    - Label:
        default: Jenkins Server Configuration
      Parameters:
      - JenkinsPrefix
      - MavenVersion
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: PV64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.large:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-1a15c77b
      HVMG2: ami-78ba6619
      PV64: ami-cf14c6ae
    ap-northeast-2:
      HVM64: ami-a04297ce
      HVMG2: NOT_SUPPORTED
      PV64: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-cacbbea5
      HVMG2: ami-f7354198
      PV64: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-7243e611
      HVMG2: ami-56e84c35
      PV64: ami-a743e6c4
    ap-southeast-2:
      HVM64: ami-55d4e436
      HVMG2: ami-2589b946
      PV64: ami-3ad6e659
    eu-central-1:
      HVM64: ami-0044b96f
      HVMG2: ami-d9d62ab6
      PV64: ami-1345b87c
    eu-west-1:
      HVM64: ami-d41d58a7
      HVMG2: ami-f0e0a483
      PV64: ami-0e10557d
    sa-east-1:
      HVM64: ami-b777e4db
      HVMG2: NOT_SUPPORTED
      PV64: ami-1d75e671
    us-east-1:
      HVM64: ami-c481fad3
      HVMG2: ami-50b4f047
      PV64: ami-4d87fc5a
    us-west-1:
      HVM64: ami-de347abe
      HVMG2: ami-699ad409
      PV64: ami-df3779bf
    us-west-2:
      HVM64: ami-b04e92d0
      HVMG2: ami-002bf460
      PV64: ami-1d49957d
Resources:
  ProvisioningLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 3653
      LogGroupName: !Join ['-', [!Ref 'AWS::StackName', 'ProvisioningLogs']]
  SystemLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Join ['-', [!Ref 'AWS::StackName', 'SystemLogs']]
  WebServerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Join ['-', [!Ref 'AWS::StackName', 'WebServerLogs']]
  CIServerLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      LogGroupName: !Join ['-', [!Ref 'AWS::StackName', 'JenkinsLogs']]
  Ec2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: /
      Policies:
      - PolicyName: s3
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:*
            Effect: Allow
            Resource: '*'
      - PolicyName: ec2
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - ec2:Describe*
            Effect: Allow
            Resource: '*'
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - logs:*
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
  Ec2RoleInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - Ref: Ec2Role
  JenkinsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Jenkins server Security group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - CidrIp: !Ref SSHLocation
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
      - CidrIp: !Ref SSHLocation
        FromPort: '80'
        IpProtocol: tcp
        ToPort: '80'
      - CidrIp: !Ref SSHLocation
        FromPort: '443'
        IpProtocol: tcp
        ToPort: '443'
      - CidrIp: 0.0.0.0/0
        FromPort: '-1'
        IpProtocol: icmp
        ToPort: '-1'
      Tags:
      - Key: Name
        Value: !Sub |
          ${AWS::StackName} - Jenkins Security Group
  JenkinsServerInstance:
    Type: AWS::EC2::Instance
    DependsOn: JenkinsSecurityGroup
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
          - install_cfn
          - make_swap
          - install_package
          - start_jenkins
          - install_maven
          - configure_nginx
          - configure_jenkins
          - configure_awslogs
        install_cfn:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              group: root
              mode: '000400'
              owner: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.JenkinsServerInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v -s ${AWS::StackId} -r JenkinsServerInstance --region ${AWS::Region}
                runas=root
              group: root
              mode: '000400'
              owner: root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        make_swap:
          files:
            /etc/rc.d/init.d/swap:
              source: https://raw.githubusercontent.com/kayu28/aws-cloudformation/master/solutions/util/swap
              owner: root
              group: root
              mode: '000755'
          services:
            sysvinit:
              swap:
                enabled: 'true'
                ensureRunning: 'true'
        install_package:
          packages:
            yum:
              nginx                    : []
              java-1.8.0-openjdk-devel : []
              jenkins                  : []
              ant                      : []
              awslogs                  : []
          commands:
            01_update-alternatives:
              command: echo 2 | update-alternatives --config java
        start_jenkins:
          files:
            /etc/sysconfig/jenkins:
              content: !Sub |
                JENKINS_HOME="/var/lib/jenkins"
                JENKINS_JAVA_CMD=""
                JENKINS_USER="jenkins"
                JENKINS_INSTALL_SKIP_CHOWN="true"
                JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true"
                JENKINS_PORT="8080"
                JENKINS_LISTEN_ADDRESS=""
                JENKINS_HTTPS_PORT=""
                JENKINS_HTTPS_KEYSTORE=""
                JENKINS_HTTPS_KEYSTORE_PASSWORD=""
                JENKINS_HTTPS_LISTEN_ADDRESS=""
                JENKINS_DEBUG_LEVEL="5"
                JENKINS_ENABLE_ACCESS_LOG="yes"
                JENKINS_HANDLER_MAX="100"
                JENKINS_HANDLER_IDLE="20"
                JENKINS_ARGS="--prefix=/${JenkinsPrefix}"
              owner: root
              group: root
              mode: '000600'
          commands:
            01_visudo:
              command: !Sub |
                echo 'Defaults:jenkins     !requiretty' >> /etc/sudoers
                echo 'jenkins     ALL=(ALL)     NOPASSWD:ALL' >> /etc/sudoers
          services:
            sysvinit:
              jenkins:
                enabled: 'true'
                ensureRunning: 'true'
        install_maven:
          files:
            /etc/profile.d/maven.sh:
              content: !Sub |
                export M3_HOME="/opt/apache-maven-${MavenVersion}"
                export PATH="$M3_HOME/bin:$PATH"
              owner: root
              group: root
              mode: '000755'
          commands:
            01_install:
              command: !Sub |
                wget -q -P /tmp https://archive.apache.org/dist/maven/maven-3/${MavenVersion}/binaries/apache-maven-${MavenVersion}-bin.tar.gz
                tar zfx /tmp/apache-maven-${MavenVersion}-bin.tar.gz -C /opt
                rm -f /tmp/apache-maven-${MavenVersion}-bin.tar.gz
        configure_jenkins:
          files:
            /var/lib/jenkins/hudson.tasks.Maven.xml:
              content: !Sub |
                <?xml version='1.0' encoding='UTF-8'?>
                <hudson.tasks.Maven_-DescriptorImpl>
                  <installations>
                    <hudson.tasks.Maven_-MavenInstallation>
                      <name>maven${MavenVersion}</name>
                      <home>/opt/apache-maven-${MavenVersion}</home>
                      <properties/>
                    </hudson.tasks.Maven_-MavenInstallation>
                  </installations>
                </hudson.tasks.Maven_-DescriptorImpl>
              owner: jenkins
              group: jenkins
              mode: '000644'
            /var/lib/jenkins/jenkins.mvn.GlobalMavenConfig.xml:
              content: !Sub |
                <?xml version='1.0' encoding='UTF-8'?>
                <jenkins.mvn.GlobalMavenConfig>
                  <settingsProvider class="jenkins.mvn.DefaultSettingsProvider"/>
                  <globalSettingsProvider class="jenkins.mvn.DefaultGlobalSettingsProvider"/>
                </jenkins.mvn.GlobalMavenConfig>
              owner: jenkins
              group: jenkins
              mode: '000644'
            /var/lib/jenkins/hudson.tasks.Ant.xml:
              content: !Sub |
                <?xml version='1.0' encoding='UTF-8'?>
                <hudson.tasks.Ant_-DescriptorImpl>
                  <installations>
                    <hudson.tasks.Ant_-AntInstallation>
                      <name>ant</name>
                      <home>/usr/share/ant</home>
                      <properties/>
                    </hudson.tasks.Ant_-AntInstallation>
                  </installations>
                </hudson.tasks.Ant_-DescriptorImpl>
              owner: jenkins
              group: jenkins
              mode: '000644'
          commands:
            01_wait:
              command: !Sub |
                sleep 10
                code=503; while [ $code -ne 200 ]; do code=`curl -LI http://localhost:8080/jenkins/jnlpJars/jenkins-cli.jar -o /dev/null -w '%{http_code}' -s` ; echo $code; sleep 5; done
            02_mod_config:
              command: !Sub |
                cp /var/lib/jenkins/config.xml /var/lib/jenkins/config.xml.origin
                sed -i -e '/jdks/d' /var/lib/jenkins/config.xml
                sed -i -e '/buildsDir/a <jdks><jdk><name>jdk8</name><home>/usr/lib/jvm/java-1.8.0-openjdk</home><properties/></jdk></jdks>' /var/lib/jenkins/config.xml
                xmllint --format /var/lib/jenkins/config.xml --output /var/lib/jenkins/config.xml
            03_output_secretkey:
              command: echo 'initialAdminPassword:'`cat /var/lib/jenkins/secrets/initialAdminPassword`
            04_restart:
              command: service jenkins restart
        configure_nginx:
          files:
            /etc/nginx/default.d/jenkins.conf:
              content: !Sub |
                location ^~ /${JenkinsPrefix}/ {
                    proxy_pass http://127.0.0.1:8080;
                    # Fix the "It appears that your reverse proxy set up is broken" error.
                    proxy_redirect http://127.0.0.1:8080 $scheme://localhost;

                    # The following settings from https://wiki.jenkins-ci.org/display/JENKINS/Running+Hudson+behind+Nginx
                    sendfile off;

                    proxy_set_header   Host             $host:$server_port;
                    proxy_set_header   X-Real-IP        $remote_addr;
                    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
                    proxy_max_temp_file_size 0;

                    #this is the maximum upload size
                    client_max_body_size       10m;
                    client_body_buffer_size    128k;

                    proxy_connect_timeout      90;
                    proxy_send_timeout         90;
                    proxy_read_timeout         90;

                    proxy_buffer_size          4k;
                    proxy_buffers              4 32k;
                    proxy_busy_buffers_size    64k;
                    proxy_temp_file_write_size 64k;
                }
              owner: root
              group: root
              mode: '000644'
          services:
            sysvinit:
              nginx:
                enabled: 'true'
                ensureRunning: 'true'
        configure_awslogs:
          files:
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              group: root
              mode: '000444'
              owner: root
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/awslogs/state/agent-state

                [/var/log/cloud-init.log]
                file = /var/log/cloud-init.log
                log_group_name = ${ProvisioningLogs}
                log_stream_name = {instance_id}/cloud-init.log
                datetime_format = %b %d %H:%M:%S

                [/var/log/cloud-init-output.log]
                file = /var/log/cloud-init-output.log
                log_group_name = ${ProvisioningLogs}
                log_stream_name = {instance_id}/cloud-init-output.log
                datetime_format = 

                [/var/log/cfn-init.log]
                file = /var/log/cfn-init.log
                log_group_name = ${ProvisioningLogs}
                log_stream_name = {instance_id}/cfn-init.log
                datetime_format = %Y-%m-%d %H:%M:%S

                [/var/log/cfn-init-cmd.log]
                file = /var/log/cfn-init-cmd.log
                log_group_name = ${ProvisioningLogs}
                log_stream_name = {instance_id}/cfn-init-cmd.log
                datetime_format = %Y-%m-%d %H:%M:%S

                [/var/log/cfn-hup.log]
                file = /var/log/cfn-hup.log
                log_group_name = ${ProvisioningLogs}
                log_stream_name = {instance_id}/cfn-hup.log
                datetime_format = %Y-%m-%d %H:%M:%S

                [/var/log/cfn-wire.log]
                file = /var/log/cfn-wire.log
                log_group_name = ${ProvisioningLogs}
                log_stream_name = {instance_id}/cfn-wire.log
                datetime_format = %Y-%m-%d %H:%M:%S

                [/var/log/nginx/access.log]
                file = /var/log/nginx/access.log
                log_group_name = ${WebServerLogs}
                log_stream_name = {instance_id}/access.log
                datetime_format = %d/%b/%Y:%H:%M:%S

                [/var/log/nginx/error.log]
                file = /var/log/nginx/error.log
                log_group_name = ${WebServerLogs}
                log_stream_name = {instance_id}/error.log
                datetime_format = %d/%b/%Y:%H:%M:%S

                [/var/log/jenkins/jenkins.log]
                file = /var/log/jenkins/jenkins.log
                datetime_format = %d %b %Y %H:%M:%S
                log_group_name = ${CIServerLogs}
                log_stream_name = {instance_id}/jenkins.log
                multi_line_start_pattern = {datetime_format}

                [/var/log/yum.log]
                file = /var/log/yum.log
                log_group_name = ${ProvisioningLogs}
                log_stream_name = {instance_id}/yum.log
                multi_line_start_pattern = {datetime_format}
                datetime_format = [%b %d %H:%M:%S %Y]

                [/var/log/cron]
                file = /var/log/cron
                log_group_name = ${SystemLogs}
                log_stream_name = {instance_id}/cron.log
                multi_line_start_pattern = {datetime_format}
                datetime_format = %b %d %H:%M:%S

                [/var/log/messages]
                file = /var/log/messages
                log_group_name = ${SystemLogs}
                log_stream_name = {instance_id}/messages.log
                datetime_format = %b %d %H:%M:%S
                multi_line_start_pattern = {datetime_format}

                [/var/log/syslog]
                file = /var/log/syslog
                datetime_format = %b %d %H:%M:%S
                log_group_name = ${SystemLogs}
                log_stream_name = {instance_id}/syslog.log
                multi_line_start_pattern = {datetime_format}
              group: root
              mode: '000444'
              owner: root
          commands:
            01_create_state_directory:
              command: mkdir -p /var/awslogs/state
          services:
            sysvinit:
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
    Properties:
      IamInstanceProfile: !Ref Ec2RoleInstanceProfile
      ImageId:
        !FindInMap [AWSRegionArch2AMI, !Ref "AWS::Region", !FindInMap [AWSInstanceType2Arch, !Ref InstanceType, Arch]]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Monitoring: !Ref Monitoring
      DisableApiTermination: true
      BlockDeviceMappings:
      - DeviceName: /dev/xvda
        Ebs:
          VolumeType: gp2
          VolumeSize: !Ref VolumeSize
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'true'
        DeleteOnTermination: 'true'
        DeviceIndex: '0'
        GroupSet:
        - Ref: JenkinsSecurityGroup
        PrivateIpAddress: !Ref PrivateIpAddress
        SubnetId: !Ref SubnetId
      Tags:
      - Key: Name
        Value: !Sub |
          ${AWS::StackName} - Jenkins Master Server
      - Key: Application
        Value: !Ref AWS::StackId
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash -xe
            yum -y update

            # Install Development tools
            yum -y groupinstall "Development tools"

            # Change timezone
            cp /etc/sysconfig/clock /etc/sysconfig/clock.org
            echo -e 'ZONE="Asia/Tokyo"\nUTC=false' > /etc/sysconfig/clock
            cp /etc/localtime /etc/localtime.org
            ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime

            # Install Jenkins Repository
            wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
            rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key

            # Helper function
            function error_exit
            {
              /opt/aws/bin/cfn-signal -e 1 -r "$1" '${WaitHandle}'
              exit 1
            }

            # Install the files and packages from the metadata
            /opt/aws/bin/cfn-init -v -s ${AWS::StackName} -r JenkinsServerInstance  --region ${AWS::Region} || error_exit 'Failed to run cfn-init'

            # Start up the cfn-hup daemon to listen for changes to the Web Server metadata
            /opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'

            # Signal the status from cfn-init
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} -r JenkinsServerInstance --region ${AWS::Region} '${WaitHandle}'
  WaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn:
    - JenkinsServerInstance
    Properties:
      Handle: !Ref WaitHandle
      Timeout: '2000'
  WaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
Outputs:
  JenkinsServerInstanceId:
    Description: InstanceId of Jenkins Server
    Value: !Ref JenkinsServerInstance
  JenkinsServerPublicIP:
    Description: Public IP address of Jenkins Server
    Value:
      Fn::GetAtt:
      - JenkinsServerInstance
      - PublicIp
  JenkinsURL:
    Description: Jenkins URL
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - JenkinsServerInstance
          - PublicIp
        - /jenkins
